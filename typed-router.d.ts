/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...404]': RouteRecordInfo<'/[...404]', '/:404(.*)', { 404: ParamValue<true> }, { 404: ParamValue<false> }>,
    '/media': RouteRecordInfo<'/media', '/media', Record<never, never>, Record<never, never>>,
    '/notes': RouteRecordInfo<'/notes', '/notes', Record<never, never>, Record<never, never>>,
    '/posts': RouteRecordInfo<'/posts', '/posts', Record<never, never>, Record<never, never>, '/posts/advice' | '/posts/ai101' | '/posts/ai102' | '/posts/ai102.5' | '/posts/ai103' | '/posts/ai103.5' | '/posts/ai104' | '/posts/ai105' | '/posts/life_worth_living' | '/posts/my-post' | '/posts/python_cheatsheet' | '/posts/quiet_war_of_focus' | '/posts/self_love_01' | '/posts/who_am_i' | '/posts/wishful_thinking'>,
    '/posts/advice': RouteRecordInfo<'/posts/advice', '/posts/advice', Record<never, never>, Record<never, never>>,
    '/posts/ai101': RouteRecordInfo<'/posts/ai101', '/posts/ai101', Record<never, never>, Record<never, never>>,
    '/posts/ai102': RouteRecordInfo<'/posts/ai102', '/posts/ai102', Record<never, never>, Record<never, never>>,
    '/posts/ai102.5': RouteRecordInfo<'/posts/ai102.5', '/posts/ai102/5', Record<never, never>, Record<never, never>>,
    '/posts/ai103': RouteRecordInfo<'/posts/ai103', '/posts/ai103', Record<never, never>, Record<never, never>>,
    '/posts/ai103.5': RouteRecordInfo<'/posts/ai103.5', '/posts/ai103/5', Record<never, never>, Record<never, never>>,
    '/posts/ai104': RouteRecordInfo<'/posts/ai104', '/posts/ai104', Record<never, never>, Record<never, never>>,
    '/posts/ai105': RouteRecordInfo<'/posts/ai105', '/posts/ai105', Record<never, never>, Record<never, never>>,
    '/posts/life_worth_living': RouteRecordInfo<'/posts/life_worth_living', '/posts/life_worth_living', Record<never, never>, Record<never, never>>,
    '/posts/my-post': RouteRecordInfo<'/posts/my-post', '/posts/my-post', Record<never, never>, Record<never, never>>,
    '/posts/python_cheatsheet': RouteRecordInfo<'/posts/python_cheatsheet', '/posts/python_cheatsheet', Record<never, never>, Record<never, never>>,
    '/posts/quiet_war_of_focus': RouteRecordInfo<'/posts/quiet_war_of_focus', '/posts/quiet_war_of_focus', Record<never, never>, Record<never, never>>,
    '/posts/self_love_01': RouteRecordInfo<'/posts/self_love_01', '/posts/self_love_01', Record<never, never>, Record<never, never>>,
    '/posts/who_am_i': RouteRecordInfo<'/posts/who_am_i', '/posts/who_am_i', Record<never, never>, Record<never, never>>,
    '/posts/wishful_thinking': RouteRecordInfo<'/posts/wishful_thinking', '/posts/wishful_thinking', Record<never, never>, Record<never, never>>,
    '/projects': RouteRecordInfo<'/projects', '/projects', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'pages/index.md': {
      routes: '/'
      views: never
    }
    'pages/[...404].md': {
      routes: '/[...404]'
      views: never
    }
    'pages/media.md': {
      routes: '/media'
      views: never
    }
    'pages/notes.md': {
      routes: '/notes'
      views: never
    }
    'pages/posts.md': {
      routes: '/posts' | '/posts/advice' | '/posts/ai101' | '/posts/ai102' | '/posts/ai102.5' | '/posts/ai103' | '/posts/ai103.5' | '/posts/ai104' | '/posts/ai105' | '/posts/life_worth_living' | '/posts/my-post' | '/posts/python_cheatsheet' | '/posts/quiet_war_of_focus' | '/posts/self_love_01' | '/posts/who_am_i' | '/posts/wishful_thinking'
      views: 'default'
    }
    'pages/posts/advice.md': {
      routes: '/posts/advice'
      views: never
    }
    'pages/posts/ai101.md': {
      routes: '/posts/ai101'
      views: never
    }
    'pages/posts/ai102.md': {
      routes: '/posts/ai102'
      views: never
    }
    'pages/posts/ai102.5.md': {
      routes: '/posts/ai102.5'
      views: never
    }
    'pages/posts/ai103.md': {
      routes: '/posts/ai103'
      views: never
    }
    'pages/posts/ai103.5.md': {
      routes: '/posts/ai103.5'
      views: never
    }
    'pages/posts/ai104.md': {
      routes: '/posts/ai104'
      views: never
    }
    'pages/posts/ai105.md': {
      routes: '/posts/ai105'
      views: never
    }
    'pages/posts/life_worth_living.md': {
      routes: '/posts/life_worth_living'
      views: never
    }
    'pages/posts/my-post.md': {
      routes: '/posts/my-post'
      views: never
    }
    'pages/posts/python_cheatsheet.md': {
      routes: '/posts/python_cheatsheet'
      views: never
    }
    'pages/posts/quiet_war_of_focus.md': {
      routes: '/posts/quiet_war_of_focus'
      views: never
    }
    'pages/posts/self_love_01.md': {
      routes: '/posts/self_love_01'
      views: never
    }
    'pages/posts/who_am_i.md': {
      routes: '/posts/who_am_i'
      views: never
    }
    'pages/posts/wishful_thinking.md': {
      routes: '/posts/wishful_thinking'
      views: never
    }
    'pages/projects.md': {
      routes: '/projects'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
